#include <Wire.h> // This library allows communication with I2C devices


#include <Adafruit_MLX90614.h> // Temp sensor library

Adafruit_MLX90614 mlx = Adafruit_MLX90614(); // Defines temp sensor as "mlx"


#include <U8glib.h> // U8glib library for OLED with SH1106 Driver

U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE); // Creates object "u8g"


// Bitmap of Suzuki Bandit Logo, 128x64px created on http://javl.github.io/image2cpp/ changes BMP file --> byte array for monochrome display

const unsigned char PROGMEM BanditLogo [] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xfc, 0x0f, 0xff, 0x8f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf8, 0xff, 0x9f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfe, 0x1c, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xf1, 0xff, 0x38, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xf8, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xe1, 0xfc, 0x00, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xc7, 0xf8, 0x03, 0xf7, 0x39, 0xcf, 
0xff, 0xfe, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0x8f, 0xc0, 0x33, 0x46, 0x11, 0x8f, 
0xff, 0xc0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0x00, 0xf3, 0x46, 0x00, 0x0f, 
0xff, 0xc0, 0x3f, 0xf8, 0x1f, 0x1f, 0xff, 0xff, 0xe0, 0x7f, 0xcf, 0x03, 0xf2, 0x64, 0x84, 0x2f, 
0xff, 0xf0, 0x7f, 0xf8, 0x38, 0x0f, 0xce, 0x3f, 0x00, 0xff, 0x9f, 0x87, 0xf0, 0x67, 0x04, 0x4f, 
0xff, 0xe1, 0xff, 0xe0, 0x60, 0x0f, 0x88, 0x3c, 0x01, 0xfe, 0x1f, 0x0f, 0xe0, 0x6f, 0x08, 0x4f, 
0xff, 0x83, 0xff, 0x81, 0xc6, 0x1e, 0x00, 0x78, 0x41, 0xf8, 0x3e, 0x0f, 0xe0, 0xce, 0x48, 0x4f, 
0xff, 0x07, 0xfe, 0x07, 0x0c, 0x10, 0x00, 0x60, 0x81, 0xe0, 0x7c, 0x0f, 0x80, 0xce, 0x48, 0x4f, 
0xfe, 0x0f, 0xf0, 0x0e, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x70, 0x00, 0x00, 0xcc, 0x08, 0x1f, 
0xfc, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x88, 0x02, 0x1f, 
0xf8, 0x00, 0x01, 0xfc, 0x06, 0x08, 0xe0, 0x00, 0x80, 0x30, 0x04, 0x01, 0xcc, 0x00, 0x42, 0x3f, 
0xf0, 0x00, 0x07, 0xfc, 0x3e, 0x73, 0xf0, 0x47, 0xc1, 0xf0, 0x3e, 0x0f, 0xed, 0xff, 0xef, 0x7f, 
0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

};



void setup() 

{
  mlx.begin(); // Initializes IR temp sensor
  
  u8g.firstPage();  
  do {
    
        u8g.drawBitmapP( 0, 0, 16, 64, BanditLogo);
    
     } while( u8g.nextPage() );
     
  delay(2500);  
}

void loop() 

{

  
  u8g.firstPage();  
  do {

      u8g.drawRFrame(0, 0, 128, 64, 8); //Parameters: top left X-coord., top left Y-coord., width, height, corner radius

      u8g.setFont(u8g_font_unifont);  
    
      u8g.drawStr(5, 15, "Ambient");  
      u8g.drawStr(5, 30, "Temp:");

      u8g.drawStr(70, 15, "Engine");  
      u8g.drawStr(70, 30, "Temp:");
      
      u8g.drawStr(44, 55, "C"); 
      u8g.drawStr(109, 55, "C"); 

      u8g.setFont(u8g_font_fur14); // Change in font to increase size of number values

      u8g.setPrintPos(9, 55);
      u8g.print(round(mlx.readAmbientTempC())); // Displays object temp in C with round function
    
      u8g.setPrintPos(74, 55);
      u8g.print(round(mlx.readObjectTempC())); // Displays object temp in C with round function
   
    } while( u8g.nextPage() );
    
  delay(50);
}
